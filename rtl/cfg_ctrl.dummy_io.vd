// This code snippet was auto generated by xls2vlog.py from source file: /home/patrick/Downloads/Interface-Definition.xlsx
// User: patrick
// Date: Jun-15-23



module CFG_CTRL #( parameter pADDR_WIDTH   = 12,
                   parameter pDATA_WIDTH   = 32
                 )
(
  input  wire          aa_cfg_awvalid,
  input  wire  [11: 0] aa_cfg_awaddr,
  input  wire          aa_cfg_wvalid,
  input  wire  [31: 0] aa_cfg_wdata,
  input  wire   [3: 0] aa_cfg_wstrb,
  input  wire          aa_cfg_arvalid,
  input  wire  [11: 0] aa_cfg_araddt,
  input  wire          aa_cfg_rready,
  input  wire  [31: 0] axi_rdata1,
  input  wire          axi_rvalid1,
  input  wire          axi_awready1,
  input  wire          axi_wready1,
  input  wire          axi_aready1,
  input  wire          axi_awready0,
  input  wire          axi_wready0,
  input  wire          axi_arready0,
  input  wire  [31: 0] axi_rdata0,
  input  wire          axi_rvalid0,
  input  wire          axi_awready2,
  input  wire          axi_wready2,
  input  wire          axi_arready2,
  input  wire  [31: 0] axi_rdata2,
  input  wire          axi_rvalid2,
  output wire          axi_awvalid1,
  output wire  [11: 0] axi_awaddr,
  output wire          axi_wvalid1,
  output wire  [31: 0] axi_wdata,
  output wire   [3: 0] axi_wstrb1,
  output wire          axi_arvalid1,
  output wire  [11: 0] axi_araddr,
  output wire          axi_rready1,
  output wire  [31: 0] aa_cfg_rdata,
  output wire          aa_cfg_rvalid,
  output wire          aa_cfg_awready,
  output wire          aa_cfg_wready,
  output wire          aa_cfg_arready,
  output wire          cc_aa_enable,
  output wire          axi_awvalid0,
  output wire          axi_wvalid0,
  output wire   [3: 0] axi_wstrb0,
  output wire          axi_arvalid0,
  output wire          axi_rready0,
  output wire          cc_la_enable,
  output wire          axi_awvalid2,
  output wire          axi_wvalid2,
  output wire   [3: 0] axi_wstrb2,
  output wire          axi_arvalid2,
  output wire          axi_rready2,
  output wire          cc_up_enable,
  output wire   [4: 0] user_prj_sel,
  input  wire          wb_rst,
  input  wire          wb_clk,
  input  wire  [31: 0] wbs_adr,
  input  wire  [31: 0] wbs_wdata,
  input  wire   [3: 0] wbs_sel,
  input  wire          wbs_cyc,
  input  wire          wbs_stb,
  input  wire          wbs_we,
  output wire          wbs_ack,
  output wire  [31: 0] wbs_rdata,
  input  wire          user_clock2,
  output wire          axi_clk,
  input  wire          axi_reset_n
);


assign axi_awvalid1    = 1'b0;
assign axi_awaddr      = 12'b0;
assign axi_wvalid1     = 1'b0;
assign axi_wdata       = 32'b0;
assign axi_wstrb1      = 4'b0;
assign axi_arvalid1    = 1'b0;
assign axi_araddr      = 12'b0;
assign axi_rready1     = 1'b0;
assign aa_cfg_rdata    = 32'b0;
assign aa_cfg_rvalid   = 1'b0;
assign aa_cfg_awready  = 1'b0;
assign aa_cfg_wready   = 1'b0;
assign aa_cfg_arready  = 1'b0;
assign cc_aa_enable    = 1'b0;
assign axi_awvalid0    = 1'b0;
assign axi_wvalid0     = 1'b0;
assign axi_wstrb0      = 4'b0;
assign axi_arvalid0    = 1'b0;
assign axi_rready0     = 1'b0;
assign cc_la_enable    = 1'b0;
assign axi_awvalid2    = 1'b0;
assign axi_wvalid2     = 1'b0;
assign axi_wstrb2      = 4'b0;
assign axi_arvalid2    = 1'b0;
assign axi_rready2     = 1'b0;
assign cc_up_enable    = 1'b0;
assign user_prj_sel    = 5'b0;
assign wbs_ack         = 1'b0;
assign wbs_rdata       = 32'b0;
assign axi_clk         = 1'b0;


endmodule // CFG_CTRL
