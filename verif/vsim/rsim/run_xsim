#!/bin/bash 

# source /mnt/sdb2/CAD/Xilinx/Vivado/2021.2/settings64.sh
source /home/CAD/Xilinx/Vitis/Vivado/2022.2/settings64.sh



if [ $# -lt 1 ]; then
  echo "No test name!"
  echo "Example:"
  echo "  run_simv basic"
  exit 1
fi

# rm -f risc_v.hex
# rm -rf xsim.dir/ *.log *.pb *.jou *.wdb

# riscv32-unknown-elf-gcc -Wl,--no-warn-rwx-segments -g \
#	-I../../firmware \
#	-march=rv32i \
#       -mabi=ilp32 \
#       -D__vexriscv__ \
#	-Wl,-Bstatic,-T,../../firmware/sections.lds,--strip-discarded \
#	-ffreestanding -nostdlib -o counter_la.elf ../../firmware/crt0_vex.S ../../firmware/isr.c counter_la.c

# riscv32-unknown-elf-objcopy -O verilog counter_la.elf risc_v.hex

# to fix flash base address
# sed -ie 's/@10/@00/g' risc_v.hex

# rm -f counter_la.elf


  pushd . ; cd ../../../src ; ./gen_rtl            ; popd
# pushd . ; cd ../../../src ; ./gen_rtl src.rtl.f  ; popd
# pushd . ; cd ../../../src ; ./gen_rtl src.gate.f ; popd
 

# chg_fp down ../../../rtl/rtl.f  ./rtl.f
  sed -e "s/\.\.\//..\/..\//" ../../../dsn/rtl/rtl.f      > ./rtl.f
# sed -e "s/\.\.\//..\/..\//" ../../../dsn/rtl/rtl.user.f > ./rtl.f

#     -sourcelibdir ../../../ \
#     -sourcelibext .v \

testname=$1

# copy test case environment setting
if [ -e ../tests/$testname/bench_ini.svh ]; then
 cp ../tests/$testname/bench_ini.svh ./
else
 echo "File: ../tests/$testname/bench_ini.svh not found"
 exit
fi

if [ -e ../tests/$testname/bench_vec.svh ]; then
 cp ../tests/$testname/bench_vec.svh ./
else
 echo "File: ../tests/$testname/bench_vec.svh not found"
 exit
fi

# FUNCTIONAL, USE_POWER_PINS : defined macro flag used in I/O Library

xvlog -d SIM \
      -d CPU_TRACE \
      -d DUNIT_DELAY=#1 \
      -d  UNIT_DELAY=#1 \
      -d FUNCTIONAL \
      -d USE_POWER_PINS \
      -sv \
      -f ../env/bfm.lib.f \
      -f ../env/bfm.sys.f \
      -f ../env/bfm.dsn.f \
      -f ./rtl.f \
      -i ../../../dsn/rtl \
      -i ../env \
      ../env/top_bench.sv -log xvlog.log

ss_name=caravel_asic

xelab --timescale 1ns/10ps -debug typical -top top_bench -snapshot $ss_name

# generate CPU boot image
if [ -e ../tests/$testname/$testname.c ]; then
 rm ../tests/$testname/$testname.hex
 pushd . ; cd ../tests/$testname ; ./gen_hex ; popd
else
 echo "File: ../tests/$testname/$testname.c not found"
 exit
fi

if [ -e ../tests/$testname/$testname.hex ]; then
 # loaded by BFM: spiflash
 cp ../tests/$testname/$testname.hex  ./riscv.hex
else
 echo "File: ../tests/$testname/$testname.hex not found, CPU image compile failed"
 exit
fi

# run RTL simulation
# add --tl for zero simulation time debug
if [ -e ./xsim.dir/$ss_name/xsimk ]; then
  if [ -e riscv.hex ]; then
  # xsim $ss_name --wdb caravel_asic.wdb -R
  # -R means run all;quit
  # xsim $ss_name -R --tclbatch log_wave.tcl
    xsim $ss_name    --tclbatch log_wave.tcl
    mv xsim.log xsim.$testname.log
  else
    echo "File: riscv.hex not found, failed at last stage"
  fi
else
  echo "XSIM snapshot $ss_name not found"
fi

# xsim caravel_tb_elab -R
