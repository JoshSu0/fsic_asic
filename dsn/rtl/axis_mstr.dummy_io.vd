// This code snippet was auto generated by xls2vlog.py from source file: ./user_project_wrapper.xlsx
// User: patrick
// Date: Jun-15-23



module AXIS_MSTR #( parameter pADDR_WIDTH   = 12,
                    parameter pDATA_WIDTH   = 32
                  )
(
  output wire                        sm_tready,
  input  wire                        sm_tvalid_0,
  input  wire  [(pDATA_WIDTH-1) : 0] sm_tdata_0,
  input  wire                 [2: 0] sm_tid_0,
  input  wire                 [3: 0] sm_tstrb_0,
  input  wire                        sm_tkeep_0,
  input  wire                        sm_tlast_0,
  input  wire                        sm_tvalid_1,
  input  wire  [(pDATA_WIDTH-1) : 0] sm_tdata_1,
  input  wire                 [2: 0] sm_tid_1,
  input  wire                 [3: 0] sm_tstrb_1,
  input  wire                        sm_tkeep_1,
  input  wire                        sm_tlast_1,
  input  wire                        sm_tvalid_2,
  input  wire  [(pDATA_WIDTH-1) : 0] sm_tdata_2,
  input  wire                 [2: 0] sm_tid_2,
  input  wire                 [3: 0] sm_tstrb_2,
  input  wire                        sm_tkeep_2,
  input  wire                        sm_tlast_2,
  input  wire                        sm_tvalid_3,
  input  wire  [(pDATA_WIDTH-1) : 0] sm_tdata_3,
  input  wire                 [2: 0] sm_tid_3,
  input  wire                 [3: 0] sm_tstrb_3,
  input  wire                        sm_tkeep_3,
  input  wire                        sm_tlast_3,
  input  wire                        m_tready,
  output wire                        m_tvalid,
  output wire  [(pDATA_WIDTH-1) : 0] m_tdata,
  output wire                 [1: 0] m_tuser,
  output wire                 [3: 0] m_tstrb,
  output wire                 [3: 0] m_tkeep,
  output wire                        m_tlast,
  input  wire                        axis_clk,
  input  wire                        axi_reset_n,
  input  wire                        axis_rst_n,
  input  wire                 [4: 0] user_prj_sel
);


assign sm_tready     = 1'b0;
assign m_tvalid      = 1'b0;
assign m_tdata       = {pDATA_WIDTH{1'b0}};
assign m_tuser       = 2'b0;
assign m_tstrb       = 4'b0;
assign m_tkeep       = 4'b0;
assign m_tlast       = 1'b0;


endmodule // AXIS_MSTR
